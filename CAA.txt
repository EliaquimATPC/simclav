Option 1: Using a Local Web Server (Recommended)
Create a simple Python web server (Flask example):

python
# server.py
from flask import Flask, jsonify
app = Flask(__name__)

@app.route('/run-script', methods=['POST'])
def run_script():
    # Your Python code logic here
    result = {"status": "success", "message": "Script executed"}
    return jsonify(result)

if __name__ == '__main__':
    app.run(port=5000)
In your HTML/JavaScript:

html
<button id="runPython">Run Python Script</button>

<script>
document.getElementById('runPython').addEventListener('click', async () => {
    try {
        const response = await fetch('http://localhost:5000/run-script', {
            method: 'POST'
        });
        const result = await response.json();
        alert(result.message);
    } catch (error) {
        console.error('Error:', error);
    }
});
</script>
--------------------------------------------------------------------------

Option 4: Using PyScript (New Approach)
You can include Python directly in HTML using PyScript:

html
<link rel="stylesheet" href="https://pyscript.net/latest/pyscript.css" />
<script defer src="https://pyscript.net/latest/pyscript.js"></script>

<button py-click="run_python" id="run-python">Run Python</button>

<py-script>
def run_python(event):
    # Your Python code here
    print("Python script executed!")
</py-script>
-----------------------------------------------------------------------